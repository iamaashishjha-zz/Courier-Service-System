package form;

import bll.Feedback;
import bll.UserAccount;
import dao.DatabaseDao;
import dao.DatabaseDaoImpl;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

public class IntFrmFeedback extends javax.swing.JInternalFrame {

    /**
     * Creates new form IntFrmFeedback
     */
    private ArrayList<String> dataList;

    public IntFrmFeedback() {
        initComponents();

        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);

        DatabaseDao dd = new DatabaseDaoImpl();

        loadDataToTable();

        try {
            dataList = dd.getDataFromFile("FeedbackDetails.txt");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCID = new javax.swing.JTextField();
        txtFeedback = new javax.swing.JTextField();
        txtCName = new javax.swing.JTextField();
        cmbFCategory = new javax.swing.JComboBox<>();
        cmbImp = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setPreferredSize(new java.awt.Dimension(800, 575));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 55));

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel1.setText("Feedback Management");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addContainerGap(624, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel2.setText("Customer Id");

        jLabel3.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel3.setText("Customer Name");

        jLabel4.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel4.setText("Feedback Category");

        jLabel5.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel5.setText("Feedback");

        jLabel6.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel6.setText("Improvement Needed");

        txtCID.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtCID.setPreferredSize(new java.awt.Dimension(200, 25));

        txtFeedback.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtFeedback.setPreferredSize(new java.awt.Dimension(200, 25));

        txtCName.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtCName.setPreferredSize(new java.awt.Dimension(200, 25));

        cmbFCategory.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        cmbFCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Worst", "Worse", "Bad", "Good", "Better", "Best" }));
        cmbFCategory.setPreferredSize(new java.awt.Dimension(200, 25));
        cmbFCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFCategoryActionPerformed(evt);
            }
        });

        cmbImp.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        cmbImp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        cmbImp.setPreferredSize(new java.awt.Dimension(200, 25));

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 0, 51));
        btnClear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAdd)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbImp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(btnUpdate)
                                .addGap(61, 61, 61)
                                .addComponent(btnDelete)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbFCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClear)
                        .addGap(95, 95, 95))))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(txtCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbFCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(cmbImp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadDataToTable() {

        DatabaseDao dd = new DatabaseDaoImpl();

        DefaultTableModel defaultTableModel = new DefaultTableModel(new String[]{"Customer Id", "Customer Name", "Feedback Category", "Feedback", "Improvement Needed"}, 0);
        try {
            dataList = dd.getDataFromFile("FeedbackDetails.txt");
            Object[] tableLines;
            tableLines = dataList.toArray();
            for (int i = 0; i < tableLines.length; i++) {

                String lines = tableLines[i].toString();
                String[] row = lines.split(",");
                defaultTableModel.addRow(row);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

        jTable2.setModel(defaultTableModel);
    }

    private boolean valid() {
        String filePath = "FeedbackDetails.txt";
        File file = new File(filePath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));

            Object[] tableLines = br.lines().toArray();
            for (int i = 0; i < tableLines.length; i++) {
                String lines = tableLines[i].toString().trim();
                String[] dataRow = lines.split(",");
                if (txtCID.getText().equals(dataRow[0])) {
                    JOptionPane.showMessageDialog(this, "Customer Id should be unique");
                    return false;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        if (txtCID.getText() == null || txtCID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Customer Id is required");
            return false;
        } else if (txtCName.getText() == "" || txtCName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Customer Name is required");
            return false;
        } else if (txtFeedback.getText() == "" || txtFeedback.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Feedback is required");
            return false;
        }
        return true;
    }


    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        DatabaseDao dd = new DatabaseDaoImpl();
        try {
            dataList = dd.getDataFromFile("FeedbackDetails.txt");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        Feedback fb = new Feedback();

        if (valid()) {
            fb.setCID(txtCID.getText());
            fb.setCName(txtCName.getText());
            fb.setFCategory(cmbFCategory.getSelectedItem().toString());
            fb.setFeedback(txtFeedback.getText());
            fb.setImprovement(cmbImp.getSelectedItem().toString());

            ArrayList<String> list = dataList;

            list.add(fb.getCID() + "," + fb.getCName() + "," + fb.getFCategory() + "," + fb.getFeedback() + "," + fb.getImprovement());

            dd.writeToFile("FeedbackDetails.txt", list);

            JOptionPane.showMessageDialog(rootPane, "Sucess");

            loadDataToTable();

            txtCID.setText("");
            txtCName.setText("");
            cmbFCategory.setSelectedIndex(0);
            txtFeedback.setText("");
            cmbImp.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        boolean found = false;

        Feedback fb = new Feedback();

        DatabaseDao dd = new DatabaseDaoImpl();

        if (txtCID.getText() == null || txtCID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please Select from the table to update record");
        } else {

            fb.setCID(txtCID.getText());
            fb.setCName(txtCName.getText());
            fb.setFCategory(cmbFCategory.getSelectedItem().toString());
            fb.setFeedback(txtFeedback.getText());
            fb.setImprovement(cmbImp.getSelectedItem().toString());

            for (int i = 0; i < dataList.size(); i++) {

                String[] storedData;
                ArrayList<String> list = dataList;
                storedData = list.get(i).split(",");
                if (txtCID.getText().equals(storedData[0])) {

                    list.set(i, fb.getCID() + "," + fb.getCName() + "," + fb.getFCategory() + "," + fb.getFeedback() + "," + fb.getImprovement());

                    dd.writeToFile("FeedbackDetails.txt", list);

                    found = true;
                    break;
                }
            }
            if (found) {

                JOptionPane.showMessageDialog(this, "Updated Sucessfully");

                loadDataToTable();

                txtCID.setText("");
                txtCName.setText("");
                cmbFCategory.setSelectedIndex(0);
                txtFeedback.setText("");
                cmbImp.setSelectedIndex(0);
            } else {
                JOptionPane.showMessageDialog(this, "Sorry file not Updated");
            }

        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        boolean found = false;
        DatabaseDao dd = new DatabaseDaoImpl();

        for (int i = 0; i < dataList.size(); i++) {

            String[] storedData;
            ArrayList<String> list = dataList;
            storedData = list.get(i).split(",");
            if (txtCID.getText().equals(storedData[0])) {
                found = true;
                list.remove(i);
                dd.writeToFile("FeedbackDetails.txt", list);
                break;
            }
        }
        if (found) {
            JOptionPane.showMessageDialog(this, "Deleted Sucessfully");
            
            loadDataToTable();
            
            txtCID.setText("");
            txtCName.setText("");
            cmbFCategory.setSelectedIndex(0);
            txtFeedback.setText("");
            cmbImp.setSelectedIndex(0);
        } else {
            JOptionPane.showMessageDialog(this, "Sorry file not deleted");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtCID.setText("");
        txtCName.setText("");
        cmbFCategory.setSelectedIndex(0);
        txtFeedback.setText("");
        cmbImp.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int row = jTable2.getSelectedRow();
        if (row < 0) {

            JOptionPane.showMessageDialog(this, "Sorry No Data Selected");
        } else {

            String id = (jTable2.getModel().getValueAt(row, 0).toString());
            for (int i = 0; i < dataList.size(); i++) {

                String[] storedData = dataList.get(i).split(",");
                if (id.equals(storedData[0])) {
                    txtCID.setText(storedData[0]);
                    txtCName.setText(storedData[1]);
                    cmbFCategory.setSelectedItem(storedData[2]);
                    txtFeedback.setText(storedData[3]);
                    cmbImp.setSelectedItem(storedData[4]);
                }
            }
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void cmbFCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFCategoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbFCategory;
    private javax.swing.JComboBox<String> cmbImp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtCID;
    private javax.swing.JTextField txtCName;
    private javax.swing.JTextField txtFeedback;
    // End of variables declaration//GEN-END:variables
}
