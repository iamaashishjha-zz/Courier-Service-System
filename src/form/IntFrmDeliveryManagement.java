/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import bll.Delivery;
import bll.Feedback;
import dao.DatabaseDao;
import dao.DatabaseDaoImpl;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ethan
 */
public class IntFrmDeliveryManagement extends javax.swing.JInternalFrame {

    /**
     * Creates new form IntFrmDeliveryManagement
     */
    private ArrayList<String> dataList;

    public IntFrmDeliveryManagement() {
        initComponents();

        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);

        DatabaseDao dd = new DatabaseDaoImpl();

        loadDataToTable();

        try {
            dataList = dd.getDataFromFile("DeliveryDetails.txt");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtCID = new javax.swing.JTextField();
        txtAddr = new javax.swing.JTextField();
        txtCName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        cmbStatus = new javax.swing.JComboBox<>();
        txtFeedback = new javax.swing.JTextField();
        txtODate = new javax.swing.JTextField();
        txtDDate = new javax.swing.JTextField();
        txtDeliveredby = new javax.swing.JTextField();
        txtCost = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(800, 575));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 55));

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel1.setText("Delivery Management");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel2.setText("Customer ID");

        jLabel3.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel3.setText("Customer Name");

        jLabel4.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel4.setText("Status");

        jLabel5.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel5.setText("Ordered Date");

        jLabel6.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel6.setText("Cost");

        jLabel7.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel7.setText("Address");

        jLabel8.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel8.setText("Phone Number");

        jLabel9.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel9.setText("Feedback");

        jLabel10.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel10.setText("Delivered Date");

        jLabel11.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        jLabel11.setText("Delivered By");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 0, 51));
        btnClear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        txtCID.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtCID.setPreferredSize(new java.awt.Dimension(200, 25));

        txtAddr.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtAddr.setPreferredSize(new java.awt.Dimension(200, 25));

        txtCName.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtCName.setPreferredSize(new java.awt.Dimension(200, 25));

        txtPhone.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtPhone.setPreferredSize(new java.awt.Dimension(200, 25));

        cmbStatus.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Delivered", "Not Delivered" }));
        cmbStatus.setPreferredSize(new java.awt.Dimension(200, 25));

        txtFeedback.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtFeedback.setPreferredSize(new java.awt.Dimension(200, 25));

        txtODate.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtODate.setPreferredSize(new java.awt.Dimension(200, 25));

        txtDDate.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtDDate.setPreferredSize(new java.awt.Dimension(200, 25));

        txtDeliveredby.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtDeliveredby.setPreferredSize(new java.awt.Dimension(200, 25));

        txtCost.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtCost.setPreferredSize(new java.awt.Dimension(200, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtODate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeliveredby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(btnAdd)
                .addGap(41, 41, 41)
                .addComponent(btnUpdate)
                .addGap(49, 49, 49)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClear)
                .addGap(96, 96, 96))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtODate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtDDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtDeliveredby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadDataToTable() {

        DatabaseDao dd = new DatabaseDaoImpl();

        DefaultTableModel defaultTableModel = new DefaultTableModel(new String[]{"Customer Id", "Address", "Customer Name", "Phone Number", "Status", "Feedback", "Ordered Date", "Delivered Date", "Cost", "Delivered by."}, 0);
        try {
            dataList = dd.getDataFromFile("DeliveryDetails.txt");
            Object[] tableLines;
            tableLines = dataList.toArray();
            for (int i = 0; i < tableLines.length; i++) {

                String lines = tableLines[i].toString();
                String[] row = lines.split(",");
                defaultTableModel.addRow(row);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

        jTable1.setModel(defaultTableModel);
    }

    private boolean valid() {
        String filePath = "DeliveryDetails.txt";
        File file = new File(filePath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));

            Object[] tableLines = br.lines().toArray();
            for (int i = 0; i < tableLines.length; i++) {
                String lines = tableLines[i].toString().trim();
                String[] dataRow = lines.split(",");
                if (txtCID.getText().equals(dataRow[0])) {
                    JOptionPane.showMessageDialog(this, "Customer Id should be unique");
                    return false;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        if (txtCID.getText() == null || txtCID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Customer Id is required");
            return false;
        } else if (txtAddr.getText() == "" || txtAddr.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Customer Address is required");
            return false;
        } else if (txtCName.getText() == "" || txtCName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Customer Name is required");
            return false;
        } else if (txtPhone.getText() == "" || txtPhone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Phone Number is required");
            return false;
        } else if (txtFeedback.getText() == "" || txtFeedback.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Feedback is required");
            return false;
        } else if (txtODate.getText() == "" || txtODate.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ordered Date is required");
            return false;
        } else if (txtDDate.getText() == "" || txtDDate.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Delivered Date is required");
            return false;
        } else if (txtCost.getText() == "" || txtCost.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Delivery Cost is required");
            return false;
        } else if (txtDeliveredby.getText() == "" || txtDeliveredby.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Delivery Person Name is required");
            return false;
        }
        return true;
    }


    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        DatabaseDao dd = new DatabaseDaoImpl();
        try {
            dataList = dd.getDataFromFile("DeliveryDetails.txt");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        Delivery dv = new Delivery();

        if (valid()) {
            dv.setCID(txtCID.getText());
            dv.setCAddr(txtAddr.getText());
            dv.setCName(txtCName.getText());
            dv.setCContact(txtPhone.getText());
            dv.setStatus(cmbStatus.getSelectedItem().toString());
            dv.setFeedback(txtFeedback.getText());
            dv.setODate(txtODate.getText());
            dv.setDDate(txtDDate.getText());
            dv.setCost(txtCost.getText());
            dv.setDeliveredBy(txtDeliveredby.getText());

            ArrayList<String> list = dataList;

            list.add(dv.getCID() + "," + dv.getCAddr() + "," + dv.getCName() + "," + dv.getCContact() + "," + dv.getStatus() + "," + dv.getFeedback() + "," + dv.getODate() + "," + dv.getDDate() + "," + dv.getCost() + "," + dv.getDeliveredBy());

            dd.writeToFile("DeliveryDetails.txt", list);

            JOptionPane.showMessageDialog(rootPane, "Sucess");

            loadDataToTable();

            txtCID.setText("");
            txtAddr.setText("");
            txtCName.setText("");
            txtPhone.setText("");
            cmbStatus.setSelectedIndex(0);
            txtFeedback.setText("");
            txtODate.setText("");
            txtDDate.setText("");
            txtCost.setText("");
            txtDeliveredby.setText("");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        boolean found = false;

        Delivery dv = new Delivery();

        DatabaseDao dd = new DatabaseDaoImpl();

        if (txtCID.getText() == null || txtCID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please Select from the table to update record");
        } else {

            dv.setCID(txtCID.getText());
            dv.setCAddr(txtAddr.getText());
            dv.setCName(txtCName.getText());
            dv.setCContact(txtPhone.getText());
            dv.setStatus(cmbStatus.getSelectedItem().toString());
            dv.setFeedback(txtFeedback.getText());
            dv.setODate(txtODate.getText());
            dv.setDDate(txtDDate.getText());
            dv.setCost(txtCost.getText());
            dv.setDeliveredBy(txtDeliveredby.getText());

            for (int i = 0; i < dataList.size(); i++) {

                String[] storedData;
                ArrayList<String> list = dataList;
                storedData = list.get(i).split(",");
                if (txtCID.getText().equals(storedData[0])) {

                    list.set(i, dv.getCID() + "," + dv.getCAddr() + "," + dv.getCName() + "," + dv.getCContact() + "," + dv.getStatus() + "," + dv.getFeedback() + "," + dv.getODate() + "," + dv.getDDate() + "," + dv.getCost() + "," + dv.getDeliveredBy());

                    dd.writeToFile("DeliveryDetails.txt", list);

                    found = true;
                    break;
                }
            }
            if (found) {

                JOptionPane.showMessageDialog(this, "Updated Sucessfully");

                loadDataToTable();

                txtCID.setText("");
                txtAddr.setText("");
                txtCName.setText("");
                txtPhone.setText("");
                cmbStatus.setSelectedIndex(0);
                txtFeedback.setText("");
                txtODate.setText("");
                txtDDate.setText("");
                txtCost.setText("");
                txtDeliveredby.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Sorry file not Updated");
            }

        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        boolean found = false;
        DatabaseDao dd = new DatabaseDaoImpl();

        for (int i = 0; i < dataList.size(); i++) {

            String[] storedData;
            ArrayList<String> list = dataList;
            storedData = list.get(i).split(",");
            if (txtCID.getText().equals(storedData[0])) {
                found = true;
                list.remove(i);
                dd.writeToFile("DeliveryDetails.txt", list);
                break;
            }
        }
        if (found) {
            JOptionPane.showMessageDialog(this, "Deleted Sucessfully");

            loadDataToTable();

            txtCID.setText("");
            txtAddr.setText("");
            txtCName.setText("");
            txtPhone.setText("");
            cmbStatus.setSelectedIndex(0);
            txtFeedback.setText("");
            txtODate.setText("");
            txtDDate.setText("");
            txtCost.setText("");
            txtDeliveredby.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Sorry file not deleted");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtCID.setText("");
        txtAddr.setText("");
        txtCName.setText("");
        txtPhone.setText("");
        cmbStatus.setSelectedIndex(0);
        txtFeedback.setText("");
        txtODate.setText("");
        txtDDate.setText("");
        txtCost.setText("");
        txtDeliveredby.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        if (row < 0) {

            JOptionPane.showMessageDialog(this, "Sorry No Data Selected");
        } else {

            String id = (jTable1.getModel().getValueAt(row, 0).toString());
            for (int i = 0; i < dataList.size(); i++) {

                String[] storedData = dataList.get(i).split(",");
                if (id.equals(storedData[0])) {
                    txtCID.setText(storedData[0]);
                    txtAddr.setText(storedData[1]);
                    txtCName.setText(storedData[2]);
                    txtPhone.setText(storedData[3]);
                    cmbStatus.setSelectedItem(storedData[4]);
                    txtFeedback.setText(storedData[5]);
                    txtODate.setText(storedData[6]);
                    txtDDate.setText(storedData[7]);
                    txtCost.setText(storedData[8]);
                    txtDeliveredby.setText(storedData[9]);
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAddr;
    private javax.swing.JTextField txtCID;
    private javax.swing.JTextField txtCName;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextField txtDDate;
    private javax.swing.JTextField txtDeliveredby;
    private javax.swing.JTextField txtFeedback;
    private javax.swing.JTextField txtODate;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
